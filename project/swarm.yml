version: "3"

services:
  caddy:
    image: balochdev/micro-caddy:1.0.6
    deploy:
      mode: replicated
      replicas: 1
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - caddy_data:/data
      - caddy_config:/config
  front-end:
    image: balochdev/front-end:1.0.9
    deploy:
      mode: replicated
      replicas: 1
  broker-service:
    image: balochdev/broker-service:1.0.1
    deploy:
      mode: replicated
      replicas: 1
  listener-service:
    image: balochdev/listener-service:1.0.0
    deploy:
      mode: replicated
      replicas: 1
  authentication-service:
    image: balochdev/authentication-service:1.0.0
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DSN: "host=postgres port=5432 user=postgres password=password dbname=users sslmode=disable timezone=UTC connect_timeout=5"
  logger-service:
    image: balochdev/logger-service:1.0.0
    deploy:
      mode: replicated
      replicas: 1
  mail-service:
    image: balochdev/mail-service:1.0.0
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MAIL_DOMAIN: localhost
      MAIL_HOST: mailhog
      MAIL_PORT: 1025
      MAIL_USERNAME: ""
      MAIL_PASSWORD: ""
      MAIL_ENCRYPTION: none
      FROM_NAME: "Jame Smith"
      FROM_ADDRESS: "james.smith@example.com"
  rabbimq:
    image: "rabbitmq:3.9-alpine"
    ports:
      - "5672:5672"
    deploy:
      mode: global
  mailhog:
    image: "mailhog/mailhog:latest"
    ports:
      - "1025:1025"
      - "8025:8025"
    deploy:
      mode: global
  mongo:
    image: "mongo:4.2.16-bionic"
    ports:
      - "27018:27017"
    environment:
      MONGO_INIT_DB_DATABASE: logs
      MONGO_INIT_DB_ROOT_USER_NAME: admin
      MONGO_INIT_DB_ROOT_PASSWORD: password
    deploy:
      mode: global
    volumes:
      - ./db-data/mongo/:/data/db
  postgres:
    image: "postgres:14.0"
    ports:
      - "5432:5432"
    restart: always
    deploy:
      mode: global
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: users
    volumes:
      - ./db-data/postgres/:/var/lib/postgresql/data/

volumes:
  caddy_data:
    external: true
  caddy_config:
    external: true
